
In order to understand the role filled by Scheme for Max, it is necessary for us to understand
in some detail the Max music programming environment in which it runs. 

Max, previously named Max/MSP, is the predominant visual programming environment for creating interactive multi-media in music academia, as well as in commercial music circles through "Max for Live", an extensionto the Ableton Live digital audio workstation embedding Max in Ableton Live.Created originally by Miller Puckette in {year} while working at IRCAM,Max was designed to enable composers of interactive computer music to change their pieces without needing the assistanceof a programmer. Max programs ("patches" in the Max nomenclature) are created by placing visual objects on acanvas ("the patcher"), and connecting them in a graph with visual "patch cords". Patches run by sendingmessages objects in the patcher in a data-flow execution model, whereby a message from oneobject (the source) triggers execution in one or more receiving objects, who in turn send on messagesto further objects. Messages are represented visually as lists of Max atoms, which can consistof symbols, integers, and floats, and can be constructed either by objects sending them, or directlyby the programmer using "message" objects. Execution follows a depth first and right-to-left order,enabling the programmer to deterministically control the flow of control by tracing message executionpaths. (i.e., A source object sending messages out to multiple receiving sub-graphs results in the righthand message path completing execution before moving left, rather than spawning two concurrent threadsof execution.)
